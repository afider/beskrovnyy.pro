---
import { getLang } from '@utils/GetLang.astro';

const allPosts = await Astro.glob('../pages/blog/*.mdx');
const currentPath = Astro.url.pathname;
const currentPost = allPosts.find(post => post.url === currentPath);
let pageToc = [];
let isToc = false;

if (currentPost) {
  isToc = true;
}

switch(currentPath) {
  case '/hobbies/':
  isToc = true;
  pageToc = [
    { name: '–ö–Ω–∏–≥–∏', hash: 'books', icon: 'üìñ' },
    { name: '–ú–æ–±–∏–ª—å–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è', hash: 'photography', icon: 'üì∏' },
    {
      name: '–≠–∫–æ–Ω–æ–º–∏–∫–∞, –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∫—Ä–∏–ø—Ç–æ—Ä—ã–Ω–æ–∫',
      hash: 'money',
      icon: 'üí∞'
    },
    {
      name: '–ö–∏–Ω–æ –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∏–≥—Ä—ã',
      hash: 'movies-and-games',
      icon: 'üïπÔ∏è'
    },
    {
      name: '–°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ –≥–æ—Ä–Ω—ã–µ –ª—ã–∂–∏',
      hash: 'sport',
      icon: '‚ù§Ô∏è',
      children: [
        {
          name: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
          hash: 'fitness',
          icon: 'üí™'
        },
        {
          name: '–ì–æ—Ä–Ω—ã–µ –ª—ã–∂–∏',
          hash: 'ski',
          icon: '‚ùÑÔ∏è'
        }
      ]
    }
  ]
  break

  case '/skills/':
    isToc = true;
    pageToc = [
    { name: '–í–µ—Ä—Å—Ç–∫–∞ –∏ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤', hash: 'layout', icon: 'üß¢' },
    { name: '–®–∞–±–ª–æ–Ω–∏–∑–∞—Ü–∏—è –∏ –±—ç–∫—ç–Ω–¥', hash: 'backend', icon: '‚õëÔ∏è' },
    {
      name: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ —Å–∏—Å—Ç–µ–º–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
      hash: 'pm',
      icon: 'üé©'
    }
  ]
  break

  case '/en/skills/':
    isToc = true;
    pageToc = [
    { name: 'HTML/CSS-coding, JavaScript programming and UX', hash: 'layout', icon: 'üß¢' },
    { name: 'Templating and backend', hash: 'backend', icon: '‚õëÔ∏è' },
    {
      name: 'Project management and analytics',
      hash: 'pm',
      icon: 'üé©'
    }
  ]
  break

  default:
    pageToc = []
  break
}

---

<aside class="contents">

  {
    isToc && getLang(currentPath) === 'en' && (
      <h2 class="contents__title">Table of contents</h2>
      <a href="#" class="contents__link contents__link--title" data-contents-item>Start</a>
    )
}{
    isToc && getLang(currentPath) === 'ru' && (
      <h2 class="contents__title">–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã</h2>
      <a href="#" class="contents__link contents__link--title" data-contents-item>–ù–∞—á–∞–ª–æ</a>
    )
  }

  {currentPost && (
    <ol class="contents__list">
    {currentPost.frontmatter.toc.map((item) => (
        <li class="contents__item">
          <a href={`#${item.hash}`} class="contents__link" data-contents-item>
            <div class="contents__text">
              <span class="contents__icon">{item.icon}</span>
                {item.name}
            </div>
          </a>
          {item.children && item.children.length > 0 && (
            <ol class="contents__list">
              {item.children.map((child) => (
                <li class="contents__item">
                  <a href={`#${child.hash}`} class="contents__link" data-contents-item>
                    <div class="contents__text">
                      <span class="contents__icon">{child.icon}</span>
                        {child.name}
                    </div>
                  </a>
                </li>
              ))}
            </ol>
          )}
        </li>
      ))
    }
  </ol>
  )}

  {pageToc && (

    <ol class="contents__list">
      {pageToc && pageToc.map((item) => (
          <li class="contents__item">
            <a href={`#${item.hash}`} class="contents__link" data-contents-item>
              <div class="contents__text">
                <span class="contents__icon">{item.icon}</span>
                  {item.name}
              </div>
            </a>
            {item.children && item.children.length > 0 && (
              <ol class="contents__list">
                {item.children.map((child) => (
                  <li class="contents__item">
                    <a href={`#${child.hash}`} class="contents__link" data-contents-item>
                      <div class="contents__text">
                        <span class="contents__icon">{child.icon}</span>
                          {child.name}
                      </div>
                    </a>
                  </li>
                ))}
              </ol>
            )}
          </li>
        ))
      }
    </ol>
  )}

</aside>
