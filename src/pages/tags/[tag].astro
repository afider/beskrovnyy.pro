---
import BaseLayoutCardsList from '@layouts/BaseLayoutCardsList.astro';
import BlogPostCard from '@components/BlogPostCard.astro';
import TagsIntro from '@components/TagsIntro.astro';
import TagsList from '@components/TagsList.astro';
import { getImageUrl } from '@utils/GetImageUrl.astro';

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../blog/*.mdx');
  const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));

    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;

---
<BaseLayoutCardsList pageTitle={tag}>

    <aside class="article__aside aside">
      <h1 class="aside__title">üè∑Ô∏è –í—Å–µ —Å—Ç–∞—Ç—å–∏ –ø–æ —Ç–µ–≥—É</h1>
      <div class="aside__body">
        <TagsList />
      </div>
    </aside>

    <TagsIntro tag={tag} />
    
    <div class="cards-grid">
      <ul class="cards-grid__list">
        {posts.map((post) => 
          <li class="cards-grid__item">
              <BlogPostCard 
                url={post.url} 
                title={post.frontmatter.title} 
                date={post.frontmatter.date} 
                dateUX={post.frontmatter.dateUX} 
                description={post.frontmatter.description}
                img={getImageUrl(post.frontmatter.coverImage)}
              />
          </li>
        )}
      </ul>
    </div>
    
</BaseLayoutCardsList>